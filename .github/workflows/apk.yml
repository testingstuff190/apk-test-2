name: Firebase App Distribution

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  upload-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Firebase CLI
        run: npm install -g firebase-tools
        
      - name: Install Google Cloud SDK
        run: |
          # Update the package list and install dependencies
          sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg

          # Add the Google Cloud SDK public key
          curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg

          # Add the Cloud SDK distribution URI as a package source
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list

          # Update the package list and install the Google Cloud SDK
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk
          
          
      - name: Set up Google Cloud credentials
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: echo "$GOOGLE_APPLICATION_CREDENTIALS" > /tmp/account.json

      - name: Authenticate with Google Cloud
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/account.json
        run: |
          # Authenticate using a service account key
          gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          
      - name: Fetch version from Firebase Cloud Storage
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/account.json
        run: |
          gcloud auth activate-service-account --key-file=/tmp/account.json
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          # Step 2: Read the version number from the file
          CURRENT_VERSION=$(curl -s -H "Authorization: Bearer $ACCESS_TOKEN" \
          "https://firebaseappdistribution.googleapis.com/v1/projects/${{ secrets.PROJECT_NUMBER }}/apps/${{ secrets.FIREBASE_APP_ID }}/releases" | jq -r '.releases[0].displayVersion')
          echo "Current Version: $CURRENT_VERSION"

          if [ "$CURRENT_VERSION" = "null" ]; then
            CURRENT_VERSION="1.1.0"
          fi
          # Step 3: Split version number into major, minor, patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Step 4: Increment version (patch version in this case)
          PATCH=$((PATCH + 1))
          NEW_VERSION_NUMBER="${MAJOR}.${MINOR}.${PATCH}"
          echo "New Version: $NEW_VERSION_NUMBER"
          # Export the new version to be used in subsequent steps
          echo "NEW_VERSION_NUMBER=$NEW_VERSION_NUMBER" >> $GITHUB_ENV

      - name: Dummy Build
        run: echo "Building"
        # run: exit 1
     #  - name: Fetch all commits
     #   run: git fetch --unshallow

      - name: Upload APK to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/account.json
        run: |
          firebase appdistribution:distribute bitbar-sample-app.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups "testers" \
            --release-notes-file releasenotes.txt \
            --debug
